{
	"openapi": "3.0.0",
	"info": {
		"version": "1.0.0",
		"title": "API",
		"description": "A minimal and easy API",
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		}
	},
	"basePath": "/api",
	"schemes": ["https", "http"],
	"servers": [
		{
			"url": "https://task-manager.goit.co.ua/api",
			"description": "The production API server"
		},
		{
			"url": "http://localhost:50005/api",
			"description": "The production API server"
		}
	],
	"tags": [
		{
			"name": "Public",
			"description": "NoProtected routes"
		},
		{
			"name": "Protected",
			"description": "Protected routes"
		}
	],
	"consumes": ["application/json"],
	"produces": ["application/json"],
	"paths": {
		"/auth": {
			"post": {
				"tags": ["Public"],
				"summary": "route for register / login user in system",
				"requestBody": {
					"description": "Optional description in *Markdown*",
					"required": ["nickname", "password"],
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AuthRequest"
							},
							"example": {
								"nickname": "petrovich",
								"password": "password"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AuthResponse"
								}
							}
						}
					},
					"400": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"success": {
											"type": "boolean",
											"example": false
										},
										"message": {
											"type": "string",
											"example": "Invalid Password"
										}
									}
								}
							}
						}
					},
					"422": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"oneOf": [
										{
											"properties": {
												"success": {
													"type": "boolean",
													"example": false
												},
												"message": {
													"type": "string",
													"example": "Field password empty"
												}
											}
										},
										{
											"properties": {
												"success": {
													"type": "boolean",
													"example": false
												},
												"message": {
													"type": "string",
													"example": "Field nickname empty"
												}
											}
										}
									]
								}
							}
						}
					}
				}
			}
		},
		"/tests/{languageId}": {
			"parameters": [
				{
					"name": "languageId",
					"in": "path",
					"description": "languageId to use",
					"required": true,
					"schema": {
						"type": "string"
					},
					"style": "simple"
				}
			],
			"get": {
				"tags": ["Get list of Tests and start answering"],
				"summary": "Get first question by language ID, response - question, userId, languageId, ",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/StartAnswering"
								}
							}
						}
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {"type": "object"},
										"message": {
											"type": "string",
											"example": "Not found question by this language"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/tests/cancel/{userId}": {
			"post": {
				"tags": ["Get list of Tests and start answering"],
				"description": "If user want to cancel answering",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "userId to use",
						"required": true,
						"schema": {
							"type": "string"
						},
						"style": "simple"
					}
				],
				"responses": {
					"200": {
						"description": "OK"
					}
				}
			}
		},
		"/answer/{userId}": {
			"parameters": [
				{
					"name": "userId",
					"in": "path",
					"description": "userId to use",
					"required": true,
					"schema": {
						"type": "string"
					},
					"style": "simple"
				}
			],
			"post": {
				"tags": ["Answer and Result"],
				"summary": "Answering check and return result checking and next question, the last check return all results and statistic",
				"requestBody": {
					"description": "Optional description in *Markdown*",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AnswerSchema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AnswerResponse"
								}
							}
						}
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {"type": "object"},
										"message": {
											"type": "string",
											"example": "Not found question by this language"
										}
									}
								}
							}
						}
					}
				}
			}
		},
		"/answer/skip/{userId}": {
			"post": {
				"tags": ["Answer and Result"],
				"description": "If user want to skip this question and get next",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"description": "userId to use",
						"required": ["id"],
						"schema": {
							"type": "string"
						},
						"style": "simple"
					}
				],
				"requestBody": {
					"description": "Optional description in *Markdown*",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AnswerSchema"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AnswerResponse"
								}
							}
						}
					},
					"404": {
						"description": "BAD",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {"type": "object"},
										"message": {
											"type": "string",
											"example": "Not found question by this language"
										}
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"api_key": {
				"type": "apiKey",
				"name": "api_key",
				"in": "header"
			}
		},
		"schemas": {
			"AuthRequest": {
				"type": "object",
				"properties": {
					"nickname": {
						"type": "string",
						"maxLength": 15,
						"minLength": 5,
						"required": true
					},
					"password": {
						"type": "string",
						"maxLength": 12,
						"minLength": 5,
						"required": true
					}
				},
				"required": ["nickname", "password"],
				"example": {
					"nickname": "petrovich",
					"password": "password"
				}
			},
			"AuthResponse": {
				"type": "object",
				"properties": {
					"nickname": {
						"type": "string",
						"example": "petrovich"
					},
					"token": {
						"type": "string",
						"example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZDNhMTM4NmIxZTg1NTdjZjIzNjY3ODEiLCJpYXQiOjE1NjQwODcxNzV9.jSdzHuBSf4yKS6t7zwt0AoQIchHlz73JDOjfHVdbTBk"
					}
				}
			},
			"ResultAnswer": {
				"type": "object",
				"properties": {
					"result": {
						"type": "object",
						"properties": {
							"userAnswerCorrectly": {"type": "boolean"},
							"questionExposition": {"type": "string"},
							"userAnswer": {"type": "number"},
							"rightAnswer": {"type": "number"}
						}
					}
				}
			},
			"AnswerResponse": {
				"type": "object",
				"properties": {
					"$ref": "#/components/schemas/ResultAnswer",
					"allQuestionsCount": {
						"type": "number",
						"default": 25,
						"example": 25
					},
					"questionNumber": {"type": "string"},
					"nextQuestion": {
						"$ref": "#/components/schemas/Question"
					}
				}
			},
			"Questions": {
				"type": "array",
				"items": {
					"type": "object",
					"$ref": "#/components/schemas/Question"
				}
			},
			"Question": {
				"type": "object",
				"properties": {
					"questionText": {
						"type": "string",
						"required": true
					},
					"image": {
						"type": "string"
					},
					"answers": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"answerNumber": {
									"type": "number",
									"required": true
								},
								"answerText": {
									"type": "string",
									"required": true
								}
							}
						}
					}
				}
			},
			"FinalQuestions": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/FinalQuestion"
				}
			},
			"FinalQuestion": {
				"type": "object",
				"properties": {
					"questionText": {
						"type": "string",
						"required": true
					},
					"image": {
						"type": "string"
					},
					"answers": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"answerNumber": {
									"type": "number",
									"required": true
								},
								"answerText": {
									"type": "string",
									"required": true
								}
							}
						}
					}
				}
			},
			"StartAnswering": {
				"type": "object",
				"properties": {
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"languageTitle": {"type": "string"},
					"questionNumber": {"type": "number"},
					"allQuestionsCount": {"type": "number"},
					"question": {
						"type": "object",
						"$ref": "#/components/schemas/Question"
					},
					"questionNumber": {"type": "number"},
					"allQuestionsCount": {"type": "number"}
				}
			},
			"Language": {
				"type": "object",
				"properties": {
					"languageId": {
						"type": "string",
						"format": "uuid"
					},
					"title": {
						"type": "string",
						"required": true
					},
					"description": {
						"type": "string"
					},
					"image": {
						"type": "string",
						"format": "base64"
					},
					"pullQuestions": {
						"type": "number"
					},
					"countQuestions": {"type": "number"},
					"createdAt": {"type": "string", "format": "date-time"}
				}
			},
			"Languages": {
				"type": "object",
				"properties": {
					"languages": {
						"type": "array",
						"items": {
							"type": "object",
							"$ref": "#/components/schemas/Language"
						}
					}
				}
			}
		}
	}
}
